<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui" template="/WEB-INF/template.xhtml">

	<ui:define name="title">Dashboard</ui:define>

	<ui:define name="head">
		
		<script type="text/javascript">
		function percentExtender() {
			var tickColor = "#666";
		       var gridlineColor = "rgba(0,0,0,0.1)";
		       
		       this.cfg.config.type = 'pie';

		      this.cfg.config.options = {
		    		  legend: {
		    	            display: true,
		    	        },
		    	        
		          title: {
    			         display: true,
    			         text: 'Top 5 Despesas - MÃªs atual'
    				},
    				tooltips: {
    			         callbacks: {

    			             label: function (tooltipItem, data) {
		                            var amount = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
		                            
		                            var total = eval(data.datasets[tooltipItem.datasetIndex].data.join("+"));
		                            
		                            var label = tooltipItem.yLabel;
		                            
		                            return numberToReal(amount) + ' / ' + numberToReal(total) + ' ( ' + parseFloat(amount * 100 / total).toFixed(2) + '% )';
		                        }
    			          }
    			       },
		       };
		}
		
		
		function percentExtender2() {

		      this.cfg.config.options = {
		    		  legend: {
		    	            display: true,
		    	        },
		    	        
		          title: {
    			         display: true,
    			         text: 'Total de Vendas vs Dia da Semana'
    				},
    				tooltips: {
   			         callbacks: {

   			             label: function (tooltipItem, data) {
		                            var amount = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
		                            
		                            return numberToReal(amount);
		                        }
   			          }
   			       },
		       };
		}
		
		
		function percentExtender3() {

		      this.cfg.config.options = {
		    		  legend: {
		    	            display: true,
		    	        },
		    	        
		          title: {
  			         display: true,
  			         text: 'Total de Vendas vs Categoria'
  				},
  				tooltips: {
  			         callbacks: {

  			             label: function (tooltipItem, data) {
		                            var amount = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
		                            
		                            return numberToReal(amount);
		                        }
  			          }
  			       },
		       };
		}
		
		
		function percentExtender4() {

		      this.cfg.config.options = {
		    		  legend: {
		    	            display: true,
		    	        },
		    	        
		          title: {
			         display: true,
			         text: 'Estoque para Vendas vs Categoria'
				},
				tooltips: {
			         callbacks: {

			             label: function (tooltipItem, data) {
		                            var amount = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
		                            
		                            return numberToReal(amount);
		                        }
			          }
			       },
		       };
		}
		
		
		function percentExtender5() {

		      this.cfg.config.options = {
		    		  legend: {
		    	            display: true,
		    	        },
		    	        
		          title: {
			         display: true,
			         text: 'Fluxo de Caixa'
				},
				tooltips: {
			         callbacks: {

			             label: function (tooltipItem, data) {
		                            var amount = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
		                            
		                            return numberToReal(amount);
		                        }
			          }
			       },
		       };
		}
			
			
		function numberToReal(numero) {
		    var numero = numero.toFixed(2).split('.');
		    numero[0] = "R$ " + numero[0].split(/(?=(?:...)*$)/).join('.');
		    return numero.join(',');
		}
		</script>
		
		<style>
			.layout-wrapper .layout-main .layout-content {
			    padding: 60px 17px 4px 17px;
			}
			@media ( min-width :220px) {
				.dashboard-top {
					margin-top: 5px;
				}
				.dashboard-bottom {
					margin-top: -10px;
				}
			}
			@media ( min-width :460px) {
				.dashboard-top {
					margin-top: -15px;
				}
				.dashboard-bottom {
					margin-top: -25px;
				}
			}
		</style>
	</ui:define>

	<ui:define name="content">

		<div class="page-header">
			<h1>Dashboard</h1>
		</div>

		<h:form id="form">

			<div class="ui-g dashboard" style="margin-top: -25px">
			
<div class="ui-g-12 dashboard-top">
				<div class="ui-g-12 ui-lg-6 ui-xl-6">
					<p:barChart model="#{dashboardBean.barModel}" 
						style="width: 100%; height: 250px;" />

				</div>

				<div class="ui-g-12 ui-lg-6 ui-xl-6">
					<p:barChart model="#{dashboardBean.mixedModel}" 
						style="width: 100%; height: 220px;" />
				</div>
</div>

<div class="ui-g-12 dashboard-bottom">
				<div class="ui-g-12 ui-lg-4 ui-xl-4">
					<p:donutChart model="#{dashboardBean.donutModel}" 
						style="width: 100%; height: 230px;" />
				</div>

				<div class="ui-g-12 ui-lg-4 ui-xl-4">
					<p:polarAreaChart model="#{dashboardBean.polarAreaModel}"   
						style="width: 100%; height: 230px;" />
				</div>

				<div class="ui-g-12 ui-lg-4 ui-xl-4">
					<p:pieChart model="#{dashboardBean.pieModel}" 
						style="width: 100%; height: 230px;" />
				</div>
			</div>
</div>

		</h:form>


	</ui:define>

</ui:composition>